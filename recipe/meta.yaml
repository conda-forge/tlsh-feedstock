{% set version = "4.12.0" %}

package:
  name: tlsh
  version: {{ version }}

source:
  url: https://github.com/trendmicro/tlsh/archive/{{ version }}.tar.gz
  sha256: 93d206e999d51b25bc800f01c1a88dd632849b1555ca8680264486738f39f3c2

build:
  number: 0
  skip: true  # [win]

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ stdlib('c') }}
    - cmake
    - ninja

test:
  commands:
    - echo "tests in subpackages"

outputs:
  - name: libtlsh
    script: build-output.sh
    build:
      run_exports:
        - {{ pin_subpackage('libtlsh', max_pin='x.x') }}
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - {{ stdlib('c') }}
    test:
      commands:
        - test -f "${PREFIX}/lib/libtlsh${SHLIB_EXT}"

  - name: tlsh-tools
    script: build-output.sh
    test:
      commands:
        - tlsh -help
        - tlsh_unittest -help
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - {{ stdlib('c') }}
      host:
        - {{ pin_subpackage('libtlsh', exact=True) }}
      run:
        - {{ pin_subpackage('libtlsh', exact=True) }}

  - name: python-tlsh
    script: build-output.sh
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - {{ stdlib('c') }}
      host:
        - {{ pin_subpackage('libtlsh', exact=True) }}
        - pip
        - python
        - setuptools
      run:
        - {{ pin_subpackage('libtlsh', exact=True) }}
        - python
    test:
      requires:
        - pip
      imports:
        - tlsh
      commands:
        - pip check

about:
  home: https://github.com/trendmicro/tlsh
  license: Apache-2.0
  license_family: Apache
  license_file: LICENSE
  summary: TLSH is a fuzzy matching library.
  description: |
    Given a byte stream with a minimum length of 50 bytes TLSH generates a
    hash value which can be used for similarity comparisons. Similar objects
    will have similar hash values which allows for the detection of similar
    objects by comparing their hash values. Note that the byte stream should
    have a sufficient amount of complexity. For example, a byte stream of
    identical bytes will not generate a hash value.

extra:
  recipe-maintainers:
    - bollwyvl
